«IMPORT org::applause::lang::applauseDsl»

«EXTENSION templates::Extensions»

«DEFINE main FOR Model»
«EXPAND main FOR elements.typeSelect(Application).first()»
«ENDDEFINE»

«DEFINE main FOR Application»
«EXPAND headerFile»
«EXPAND moduleFile»
«ENDDEFINE»

«DEFINE headerFile FOR Application»
«FILE filenameApplicationDelegateHeader()»
#import <UIKit/UIKit.h>

@interface «applicationDelegateClassname()» : NSObject <UIApplicationDelegate> {
    UIWindow *window;
	UIViewController *rootController;
}

@property (nonatomic, retain) IBOutlet UIWindow *window;
@property (nonatomic, retain) UIViewController *rootController;

@end
«ENDFILE»
«ENDDEFINE»

«DEFINE importStatements FOR Application-»
«EXPAND importStatement FOREACH buttons-»
«ENDDEFINE»

«DEFINE importStatement FOR TabbarButton-»
#import "«view.view.filenameHeader()»"
«ENDDEFINE»

«DEFINE moduleFile FOR Application»
«FILE filenameApplicationDelegateModule()»
#import "«filenameApplicationDelegateHeader()»"
#import "IPUIView.h"
#import "«filenameCentralProvidersHeader()»"

«EXPAND importStatements-»

@implementation «applicationDelegateClassname()»

@synthesize window, rootController;

-(UIViewController*)createController {
	«centralProvidersClassName()» *providers = [[[«centralProvidersClassName()» alloc] init] autorelease];
	UITabBarController *result = [[UITabBarController alloc] init];
	NSMutableArray *controllers = [NSMutableArray array];
	
	UIViewController<IPUIView> *controller;
	UINavigationController *navController;
	IPContentProvider *contentProvider;

«EXPAND barControllerInstance FOREACH buttons»

	result.viewControllers = controllers;
	return result;
}

- (void)applicationDidFinishLaunching:(UIApplication *)application {    
	self.rootController = [self createController];
	[window addSubview: [self.rootController view]];
    [window makeKeyAndVisible];
}

- (void)dealloc {
	self.rootController = nil;
    [window release];
    [super dealloc];
}


@end
«ENDFILE»
«ENDDEFINE»

«DEFINE barControllerInstance FOR TabbarButton»
	«IF view.provider != null»
	// controller for «this.title.expression('', '')»
	contentProvider = «view.provider.contentProvider('providers', '', '')»;
	«ENDIF»
	controller = [[«view.view.className()» alloc] init];
	[controller setContentProvider: contentProvider];
	controller.tabBarItem.title = «title.expression('', '')»;
	controller.tabBarItem.image = [UIImage imageNamed:«this.icon.expression('','')»];
	navController = [[UINavigationController alloc] initWithRootViewController:controller];
	[controllers addObject: navController];
	[controller release];
	[navController release];
«ENDDEFINE»


















