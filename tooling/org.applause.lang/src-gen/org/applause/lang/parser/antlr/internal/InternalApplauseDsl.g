/*
* generated by Xtext
*/
grammar InternalApplauseDsl;

options {
	superClass=AbstractInternalAntlrParser;
	
}

@lexer::header {
package org.applause.lang.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.applause.lang.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.applause.lang.services.ApplauseDslGrammarAccess;

}

@parser::members {

 	private ApplauseDslGrammarAccess grammarAccess;
 	
    public InternalApplauseDslParser(TokenStream input, ApplauseDslGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }
    
    @Override
    protected String getFirstRuleName() {
    	return "Model";	
   	}
   	
   	@Override
   	protected ApplauseDslGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}
}

@rulecatch { 
    catch (RecognitionException re) { 
        recover(input,re); 
        appendSkippedTokens();
    } 
}




// Entry rule entryRuleModel
entryRuleModel returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getModelRule()); }
	 iv_ruleModel=ruleModel 
	 { $current=$iv_ruleModel.current; } 
	 EOF 
;

// Rule Model
ruleModel returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getModelAccess().getApplicationApplicationParserRuleCall_0_0()); 
	    }
		lv_application_0_0=ruleApplication		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getModelRule());
	        }
       		set(
       			$current, 
       			"application",
        		lv_application_0_0, 
        		"Application");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getModelAccess().getElementsModelElementParserRuleCall_1_0()); 
	    }
		lv_elements_1_0=ruleModelElement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getModelRule());
	        }
       		add(
       			$current, 
       			"elements",
        		lv_elements_1_0, 
        		"ModelElement");
	        afterParserOrEnumRuleCall();
	    }

)
)*)
;





// Entry rule entryRuleApplication
entryRuleApplication returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getApplicationRule()); }
	 iv_ruleApplication=ruleApplication 
	 { $current=$iv_ruleApplication.current; } 
	 EOF 
;

// Rule Application
ruleApplication returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:

    { 
        newCompositeNode(grammarAccess.getApplicationAccess().getTabBarApplicationParserRuleCall()); 
    }
    this_TabBarApplication_0=ruleTabBarApplication
    { 
        $current = $this_TabBarApplication_0.current; 
        afterParserOrEnumRuleCall();
    }

;





// Entry rule entryRuleModelElement
entryRuleModelElement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getModelElementRule()); }
	 iv_ruleModelElement=ruleModelElement 
	 { $current=$iv_ruleModelElement.current; } 
	 EOF 
;

// Rule ModelElement
ruleModelElement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getModelElementAccess().getTypeParserRuleCall_0()); 
    }
    this_Type_0=ruleType
    { 
        $current = $this_Type_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getModelElementAccess().getContentProviderParserRuleCall_1()); 
    }
    this_ContentProvider_1=ruleContentProvider
    { 
        $current = $this_ContentProvider_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getModelElementAccess().getViewParserRuleCall_2()); 
    }
    this_View_2=ruleView
    { 
        $current = $this_View_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getModelElementAccess().getConstantParserRuleCall_3()); 
    }
    this_Constant_3=ruleConstant
    { 
        $current = $this_Constant_3.current; 
        afterParserOrEnumRuleCall();
    }
)
;







// Entry rule entryRuleTypeDescription
entryRuleTypeDescription returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTypeDescriptionRule()); }
	 iv_ruleTypeDescription=ruleTypeDescription 
	 { $current=$iv_ruleTypeDescription.current; } 
	 EOF 
;

// Rule TypeDescription
ruleTypeDescription returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getTypeDescriptionRule());
	        }
        }
	otherlv_0=RULE_ID
	{
		newLeafNode(otherlv_0, grammarAccess.getTypeDescriptionAccess().getTypeTypeCrossReference_0_0()); 
	}

)
)(
(
		lv_many_1_0=	'[]' 
    {
        newLeafNode(lv_many_1_0, grammarAccess.getTypeDescriptionAccess().getManyLeftSquareBracketRightSquareBracketKeyword_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTypeDescriptionRule());
	        }
       		setWithLastConsumed($current, "many", true, "[]");
	    }

)
)?)
;





// Entry rule entryRuleParameter
entryRuleParameter returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getParameterRule()); }
	 iv_ruleParameter=ruleParameter 
	 { $current=$iv_ruleParameter.current; } 
	 EOF 
;

// Rule Parameter
ruleParameter returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getParameterAccess().getDescriptionTypeDescriptionParserRuleCall_0_0()); 
	    }
		lv_description_0_0=ruleTypeDescription		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getParameterRule());
	        }
       		set(
       			$current, 
       			"description",
        		lv_description_0_0, 
        		"TypeDescription");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getParameterAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getParameterRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
))
;





// Entry rule entryRuleObjectReference
entryRuleObjectReference returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getObjectReferenceRule()); }
	 iv_ruleObjectReference=ruleObjectReference 
	 { $current=$iv_ruleObjectReference.current; } 
	 EOF 
;

// Rule ObjectReference
ruleObjectReference returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getObjectReferenceRule());
	        }
        }
	otherlv_0=RULE_ID
	{
		newLeafNode(otherlv_0, grammarAccess.getObjectReferenceAccess().getObjectVariableDeclarationCrossReference_0_0()); 
	}

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getObjectReferenceAccess().getTailNestedObjectReferenceParserRuleCall_1_0()); 
	    }
		lv_tail_1_0=ruleNestedObjectReference		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getObjectReferenceRule());
	        }
       		set(
       			$current, 
       			"tail",
        		lv_tail_1_0, 
        		"NestedObjectReference");
	        afterParserOrEnumRuleCall();
	    }

)
)?)
;





// Entry rule entryRuleNestedObjectReference
entryRuleNestedObjectReference returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getNestedObjectReferenceRule()); }
	 iv_ruleNestedObjectReference=ruleNestedObjectReference 
	 { $current=$iv_ruleNestedObjectReference.current; } 
	 EOF 
;

// Rule NestedObjectReference
ruleNestedObjectReference returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='.' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getNestedObjectReferenceAccess().getFullStopKeyword_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getNestedObjectReferenceRule());
	        }
        }
	otherlv_1=RULE_ID
	{
		newLeafNode(otherlv_1, grammarAccess.getNestedObjectReferenceAccess().getObjectVariableDeclarationCrossReference_1_0()); 
	}

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getNestedObjectReferenceAccess().getTailNestedObjectReferenceParserRuleCall_2_0()); 
	    }
		lv_tail_2_0=ruleNestedObjectReference		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getNestedObjectReferenceRule());
	        }
       		set(
       			$current, 
       			"tail",
        		lv_tail_2_0, 
        		"NestedObjectReference");
	        afterParserOrEnumRuleCall();
	    }

)
)?)
;





// Entry rule entryRuleExpression
entryRuleExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getExpressionRule()); }
	 iv_ruleExpression=ruleExpression 
	 { $current=$iv_ruleExpression.current; } 
	 EOF 
;

// Rule Expression
ruleExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getExpressionAccess().getStringLiteralParserRuleCall_0()); 
    }
    this_StringLiteral_0=ruleStringLiteral
    { 
        $current = $this_StringLiteral_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getExpressionAccess().getStringFunctionParserRuleCall_1()); 
    }
    this_StringFunction_1=ruleStringFunction
    { 
        $current = $this_StringFunction_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getExpressionAccess().getCollectionLiteralParserRuleCall_2()); 
    }
    this_CollectionLiteral_2=ruleCollectionLiteral
    { 
        $current = $this_CollectionLiteral_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getExpressionAccess().getCollectionFunctionParserRuleCall_3()); 
    }
    this_CollectionFunction_3=ruleCollectionFunction
    { 
        $current = $this_CollectionFunction_3.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getExpressionAccess().getObjectReferenceParserRuleCall_4()); 
    }
    this_ObjectReference_4=ruleObjectReference
    { 
        $current = $this_ObjectReference_4.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleScalarExpression
entryRuleScalarExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getScalarExpressionRule()); }
	 iv_ruleScalarExpression=ruleScalarExpression 
	 { $current=$iv_ruleScalarExpression.current; } 
	 EOF 
;

// Rule ScalarExpression
ruleScalarExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getScalarExpressionAccess().getStringLiteralParserRuleCall_0()); 
    }
    this_StringLiteral_0=ruleStringLiteral
    { 
        $current = $this_StringLiteral_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getScalarExpressionAccess().getStringFunctionParserRuleCall_1()); 
    }
    this_StringFunction_1=ruleStringFunction
    { 
        $current = $this_StringFunction_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getScalarExpressionAccess().getObjectReferenceParserRuleCall_2()); 
    }
    this_ObjectReference_2=ruleObjectReference
    { 
        $current = $this_ObjectReference_2.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleCollectionExpression
entryRuleCollectionExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCollectionExpressionRule()); }
	 iv_ruleCollectionExpression=ruleCollectionExpression 
	 { $current=$iv_ruleCollectionExpression.current; } 
	 EOF 
;

// Rule CollectionExpression
ruleCollectionExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getCollectionExpressionAccess().getCollectionLiteralParserRuleCall_0()); 
    }
    this_CollectionLiteral_0=ruleCollectionLiteral
    { 
        $current = $this_CollectionLiteral_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getCollectionExpressionAccess().getCollectionFunctionParserRuleCall_1()); 
    }
    this_CollectionFunction_1=ruleCollectionFunction
    { 
        $current = $this_CollectionFunction_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getCollectionExpressionAccess().getObjectReferenceParserRuleCall_2()); 
    }
    this_ObjectReference_2=ruleObjectReference
    { 
        $current = $this_ObjectReference_2.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleStringLiteral
entryRuleStringLiteral returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getStringLiteralRule()); }
	 iv_ruleStringLiteral=ruleStringLiteral 
	 { $current=$iv_ruleStringLiteral.current; } 
	 EOF 
;

// Rule StringLiteral
ruleStringLiteral returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		lv_value_0_0=RULE_STRING
		{
			newLeafNode(lv_value_0_0, grammarAccess.getStringLiteralAccess().getValueSTRINGTerminalRuleCall_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getStringLiteralRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"value",
        		lv_value_0_0, 
        		"STRING");
	    }

)
)
;





// Entry rule entryRuleStringFunction
entryRuleStringFunction returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getStringFunctionRule()); }
	 iv_ruleStringFunction=ruleStringFunction 
	 { $current=$iv_ruleStringFunction.current; } 
	 EOF 
;

// Rule StringFunction
ruleStringFunction returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
    {
        $current = forceCreateModelElement(
            grammarAccess.getStringFunctionAccess().getStringConcatAction_0_0(),
            $current);
    }
)	otherlv_1='(' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getStringFunctionAccess().getLeftParenthesisKeyword_0_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getStringFunctionAccess().getValuesScalarExpressionParserRuleCall_0_2_0()); 
	    }
		lv_values_2_0=ruleScalarExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStringFunctionRule());
	        }
       		add(
       			$current, 
       			"values",
        		lv_values_2_0, 
        		"ScalarExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)+	otherlv_3=')' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getStringFunctionAccess().getRightParenthesisKeyword_0_3());
    }
)
    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getStringFunctionAccess().getStringReplaceAction_1_0(),
            $current);
    }
)	otherlv_5='replace(' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getStringFunctionAccess().getReplaceKeyword_1_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getStringFunctionAccess().getValueScalarExpressionParserRuleCall_1_2_0()); 
	    }
		lv_value_6_0=ruleScalarExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStringFunctionRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_6_0, 
        		"ScalarExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_7=',' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getStringFunctionAccess().getCommaKeyword_1_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getStringFunctionAccess().getMatchScalarExpressionParserRuleCall_1_4_0()); 
	    }
		lv_match_8_0=ruleScalarExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStringFunctionRule());
	        }
       		set(
       			$current, 
       			"match",
        		lv_match_8_0, 
        		"ScalarExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_9=',' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getStringFunctionAccess().getCommaKeyword_1_5());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getStringFunctionAccess().getReplacementScalarExpressionParserRuleCall_1_6_0()); 
	    }
		lv_replacement_10_0=ruleScalarExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStringFunctionRule());
	        }
       		set(
       			$current, 
       			"replacement",
        		lv_replacement_10_0, 
        		"ScalarExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_11=')' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getStringFunctionAccess().getRightParenthesisKeyword_1_7());
    }
)
    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getStringFunctionAccess().getStringUrlConformAction_2_0(),
            $current);
    }
)	otherlv_13='urlconform(' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getStringFunctionAccess().getUrlconformKeyword_2_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getStringFunctionAccess().getValueScalarExpressionParserRuleCall_2_2_0()); 
	    }
		lv_value_14_0=ruleScalarExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStringFunctionRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_14_0, 
        		"ScalarExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_15=')' 
    {
    	newLeafNode(otherlv_15, grammarAccess.getStringFunctionAccess().getRightParenthesisKeyword_2_3());
    }
))
;





// Entry rule entryRuleCollectionLiteral
entryRuleCollectionLiteral returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCollectionLiteralRule()); }
	 iv_ruleCollectionLiteral=ruleCollectionLiteral 
	 { $current=$iv_ruleCollectionLiteral.current; } 
	 EOF 
;

// Rule CollectionLiteral
ruleCollectionLiteral returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='[' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getCollectionLiteralAccess().getLeftSquareBracketKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCollectionLiteralAccess().getItemsScalarExpressionParserRuleCall_1_0()); 
	    }
		lv_items_1_0=ruleScalarExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCollectionLiteralRule());
	        }
       		add(
       			$current, 
       			"items",
        		lv_items_1_0, 
        		"ScalarExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_2=',' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getCollectionLiteralAccess().getCommaKeyword_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCollectionLiteralAccess().getItemsScalarExpressionParserRuleCall_2_1_0()); 
	    }
		lv_items_3_0=ruleScalarExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCollectionLiteralRule());
	        }
       		add(
       			$current, 
       			"items",
        		lv_items_3_0, 
        		"ScalarExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_4=']' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getCollectionLiteralAccess().getRightSquareBracketKeyword_3());
    }
)
;





// Entry rule entryRuleCollectionFunction
entryRuleCollectionFunction returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCollectionFunctionRule()); }
	 iv_ruleCollectionFunction=ruleCollectionFunction 
	 { $current=$iv_ruleCollectionFunction.current; } 
	 EOF 
;

// Rule CollectionFunction
ruleCollectionFunction returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getCollectionFunctionAccess().getStringSplitAction_0(),
            $current);
    }
)	otherlv_1='split(' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getCollectionFunctionAccess().getSplitKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCollectionFunctionAccess().getValueScalarExpressionParserRuleCall_2_0()); 
	    }
		lv_value_2_0=ruleScalarExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCollectionFunctionRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_2_0, 
        		"ScalarExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3=',' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getCollectionFunctionAccess().getCommaKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCollectionFunctionAccess().getDelimiterScalarExpressionParserRuleCall_4_0()); 
	    }
		lv_delimiter_4_0=ruleScalarExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCollectionFunctionRule());
	        }
       		set(
       			$current, 
       			"delimiter",
        		lv_delimiter_4_0, 
        		"ScalarExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_5=')' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getCollectionFunctionAccess().getRightParenthesisKeyword_5());
    }
)
;





// Entry rule entryRuleTabBarApplication
entryRuleTabBarApplication returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTabBarApplicationRule()); }
	 iv_ruleTabBarApplication=ruleTabBarApplication 
	 { $current=$iv_ruleTabBarApplication.current; } 
	 EOF 
;

// Rule TabBarApplication
ruleTabBarApplication returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((	otherlv_0='tabbarApplication' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getTabBarApplicationAccess().getTabbarApplicationKeyword_0_0());
    }

    |	otherlv_1='application' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getTabBarApplicationAccess().getApplicationKeyword_0_1());
    }
)(
(
		lv_name_2_0=RULE_ID
		{
			newLeafNode(lv_name_2_0, grammarAccess.getTabBarApplicationAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTabBarApplicationRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"ID");
	    }

)
)	otherlv_3='{' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getTabBarApplicationAccess().getLeftCurlyBracketKeyword_2());
    }
(	otherlv_4='splash=' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getTabBarApplicationAccess().getSplashKeyword_3_0());
    }
(
(
		lv_splash_5_0=RULE_STRING
		{
			newLeafNode(lv_splash_5_0, grammarAccess.getTabBarApplicationAccess().getSplashSTRINGTerminalRuleCall_3_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTabBarApplicationRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"splash",
        		lv_splash_5_0, 
        		"STRING");
	    }

)
))?(
(
		{ 
	        newCompositeNode(grammarAccess.getTabBarApplicationAccess().getButtonsTabbarButtonParserRuleCall_4_0()); 
	    }
		lv_buttons_6_0=ruleTabbarButton		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTabBarApplicationRule());
	        }
       		add(
       			$current, 
       			"buttons",
        		lv_buttons_6_0, 
        		"TabbarButton");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_7='}' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getTabBarApplicationAccess().getRightCurlyBracketKeyword_5());
    }
)
;





// Entry rule entryRuleTabbarButton
entryRuleTabbarButton returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTabbarButtonRule()); }
	 iv_ruleTabbarButton=ruleTabbarButton 
	 { $current=$iv_ruleTabbarButton.current; } 
	 EOF 
;

// Rule TabbarButton
ruleTabbarButton returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='button' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getTabbarButtonAccess().getButtonKeyword_0());
    }
	otherlv_1='{' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getTabbarButtonAccess().getLeftCurlyBracketKeyword_1());
    }
	otherlv_2='title=' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getTabbarButtonAccess().getTitleKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTabbarButtonAccess().getTitleScalarExpressionParserRuleCall_3_0()); 
	    }
		lv_title_3_0=ruleScalarExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTabbarButtonRule());
	        }
       		set(
       			$current, 
       			"title",
        		lv_title_3_0, 
        		"ScalarExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4='icon=' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getTabbarButtonAccess().getIconKeyword_4());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTabbarButtonAccess().getIconScalarExpressionParserRuleCall_5_0()); 
	    }
		lv_icon_5_0=ruleScalarExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTabbarButtonRule());
	        }
       		set(
       			$current, 
       			"icon",
        		lv_icon_5_0, 
        		"ScalarExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_6='view=' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getTabbarButtonAccess().getViewKeyword_6());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTabbarButtonAccess().getViewViewCallParserRuleCall_7_0()); 
	    }
		lv_view_7_0=ruleViewCall		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTabbarButtonRule());
	        }
       		set(
       			$current, 
       			"view",
        		lv_view_7_0, 
        		"ViewCall");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_8='}' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getTabbarButtonAccess().getRightCurlyBracketKeyword_8());
    }
)
;





// Entry rule entryRuleConstant
entryRuleConstant returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getConstantRule()); }
	 iv_ruleConstant=ruleConstant 
	 { $current=$iv_ruleConstant.current; } 
	 EOF 
;

// Rule Constant
ruleConstant returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getConstantAccess().getConstantAction_0(),
            $current);
    }
)	otherlv_1='const' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getConstantAccess().getConstKeyword_1());
    }
(
(
		lv_name_2_0=RULE_ID
		{
			newLeafNode(lv_name_2_0, grammarAccess.getConstantAccess().getNameIDTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getConstantRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"ID");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getConstantAccess().getValueScalarExpressionParserRuleCall_3_0()); 
	    }
		lv_value_3_0=ruleScalarExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getConstantRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_3_0, 
        		"ScalarExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleType
entryRuleType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTypeRule()); }
	 iv_ruleType=ruleType 
	 { $current=$iv_ruleType.current; } 
	 EOF 
;

// Rule Type
ruleType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getTypeAccess().getSimpleTypeParserRuleCall_0()); 
    }
    this_SimpleType_0=ruleSimpleType
    { 
        $current = $this_SimpleType_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getTypeAccess().getEntityParserRuleCall_1()); 
    }
    this_Entity_1=ruleEntity
    { 
        $current = $this_Entity_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleSimpleType
entryRuleSimpleType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSimpleTypeRule()); }
	 iv_ruleSimpleType=ruleSimpleType 
	 { $current=$iv_ruleSimpleType.current; } 
	 EOF 
;

// Rule SimpleType
ruleSimpleType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='type' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getSimpleTypeAccess().getTypeKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getSimpleTypeAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSimpleTypeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)	otherlv_2='mapsTo' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getSimpleTypeAccess().getMapsToKeyword_2());
    }
(
(
		lv_platformType_3_0=RULE_STRING
		{
			newLeafNode(lv_platformType_3_0, grammarAccess.getSimpleTypeAccess().getPlatformTypeSTRINGTerminalRuleCall_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSimpleTypeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"platformType",
        		lv_platformType_3_0, 
        		"STRING");
	    }

)
))
;





// Entry rule entryRuleEntity
entryRuleEntity returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getEntityRule()); }
	 iv_ruleEntity=ruleEntity 
	 { $current=$iv_ruleEntity.current; } 
	 EOF 
;

// Rule Entity
ruleEntity returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='entity' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getEntityAccess().getEntityKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getEntityAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getEntityRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)(	otherlv_2='extends' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getEntityAccess().getExtendsKeyword_2_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getEntityRule());
	        }
        }
	otherlv_3=RULE_ID
	{
		newLeafNode(otherlv_3, grammarAccess.getEntityAccess().getExtendsEntityCrossReference_2_1_0()); 
	}

)
))?	otherlv_4='{' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getEntityAccess().getLeftCurlyBracketKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getEntityAccess().getPropertiesPropertyParserRuleCall_4_0()); 
	    }
		lv_properties_5_0=ruleProperty		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEntityRule());
	        }
       		add(
       			$current, 
       			"properties",
        		lv_properties_5_0, 
        		"Property");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_6='}' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getEntityAccess().getRightCurlyBracketKeyword_5());
    }
)
;





// Entry rule entryRuleProperty
entryRuleProperty returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPropertyRule()); }
	 iv_ruleProperty=ruleProperty 
	 { $current=$iv_ruleProperty.current; } 
	 EOF 
;

// Rule Property
ruleProperty returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_derived_0_0=	'derived' 
    {
        newLeafNode(lv_derived_0_0, grammarAccess.getPropertyAccess().getDerivedDerivedKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPropertyRule());
	        }
       		setWithLastConsumed($current, "derived", true, "derived");
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getPropertyAccess().getDescriptionTypeDescriptionParserRuleCall_1_0()); 
	    }
		lv_description_1_0=ruleTypeDescription		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPropertyRule());
	        }
       		set(
       			$current, 
       			"description",
        		lv_description_1_0, 
        		"TypeDescription");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		lv_name_2_0=RULE_ID
		{
			newLeafNode(lv_name_2_0, grammarAccess.getPropertyAccess().getNameIDTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPropertyRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"ID");
	    }

)
))
;





// Entry rule entryRuleContentProvider
entryRuleContentProvider returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getContentProviderRule()); }
	 iv_ruleContentProvider=ruleContentProvider 
	 { $current=$iv_ruleContentProvider.current; } 
	 EOF 
;

// Rule ContentProvider
ruleContentProvider returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='contentprovider' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getContentProviderAccess().getContentproviderKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getContentProviderAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getContentProviderRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)(	otherlv_2='(' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getContentProviderAccess().getLeftParenthesisKeyword_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getContentProviderAccess().getParameterParameterParserRuleCall_2_1_0()); 
	    }
		lv_parameter_3_0=ruleParameter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getContentProviderRule());
	        }
       		set(
       			$current, 
       			"parameter",
        		lv_parameter_3_0, 
        		"Parameter");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4=')' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getContentProviderAccess().getRightParenthesisKeyword_2_2());
    }
)?(	otherlv_5='returns' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getContentProviderAccess().getReturnsKeyword_3_0());
    }

    |(
(
		lv_resolver_6_0=	'resolves' 
    {
        newLeafNode(lv_resolver_6_0, grammarAccess.getContentProviderAccess().getResolverResolvesKeyword_3_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getContentProviderRule());
	        }
       		setWithLastConsumed($current, "resolver", true, "resolves");
	    }

)
))(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getContentProviderRule());
	        }
        }
	otherlv_7=RULE_ID
	{
		newLeafNode(otherlv_7, grammarAccess.getContentProviderAccess().getTypeTypeCrossReference_4_0()); 
	}

)
)(
(
		lv_many_8_0=	'[]' 
    {
        newLeafNode(lv_many_8_0, grammarAccess.getContentProviderAccess().getManyLeftSquareBracketRightSquareBracketKeyword_5_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getContentProviderRule());
	        }
       		setWithLastConsumed($current, "many", true, "[]");
	    }

)
)?	otherlv_9='fetches' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getContentProviderAccess().getFetchesKeyword_6());
    }
	otherlv_10='XML' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getContentProviderAccess().getXMLKeyword_7());
    }
	otherlv_11='from' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getContentProviderAccess().getFromKeyword_8());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getContentProviderAccess().getUrlScalarExpressionParserRuleCall_9_0()); 
	    }
		lv_url_12_0=ruleScalarExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getContentProviderRule());
	        }
       		set(
       			$current, 
       			"url",
        		lv_url_12_0, 
        		"ScalarExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_13='selects' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getContentProviderAccess().getSelectsKeyword_10());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getContentProviderAccess().getSelectionScalarExpressionParserRuleCall_11_0()); 
	    }
		lv_selection_14_0=ruleScalarExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getContentProviderRule());
	        }
       		set(
       			$current, 
       			"selection",
        		lv_selection_14_0, 
        		"ScalarExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleProviderConstruction
entryRuleProviderConstruction returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getProviderConstructionRule()); }
	 iv_ruleProviderConstruction=ruleProviderConstruction 
	 { $current=$iv_ruleProviderConstruction.current; } 
	 EOF 
;

// Rule ProviderConstruction
ruleProviderConstruction returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
    {
        $current = forceCreateModelElement(
            grammarAccess.getProviderConstructionAccess().getComplexProviderConstructionAction_0_0(),
            $current);
    }
)(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getProviderConstructionRule());
	        }
        }
	otherlv_1=RULE_ID
	{
		newLeafNode(otherlv_1, grammarAccess.getProviderConstructionAccess().getProviderContentProviderCrossReference_0_1_0()); 
	}

)
)	otherlv_2='(' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getProviderConstructionAccess().getLeftParenthesisKeyword_0_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getProviderConstructionAccess().getArgumentExpressionParserRuleCall_0_3_0()); 
	    }
		lv_argument_3_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getProviderConstructionRule());
	        }
       		set(
       			$current, 
       			"argument",
        		lv_argument_3_0, 
        		"Expression");
	        afterParserOrEnumRuleCall();
	    }

)
)?	otherlv_4=')' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getProviderConstructionAccess().getRightParenthesisKeyword_0_4());
    }
)
    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getProviderConstructionAccess().getSimpleProviderConstructionAction_1_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getProviderConstructionAccess().getExpressionExpressionParserRuleCall_1_1_0()); 
	    }
		lv_expression_6_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getProviderConstructionRule());
	        }
       		set(
       			$current, 
       			"expression",
        		lv_expression_6_0, 
        		"Expression");
	        afterParserOrEnumRuleCall();
	    }

)
)))
;





// Entry rule entryRuleView
entryRuleView returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getViewRule()); }
	 iv_ruleView=ruleView 
	 { $current=$iv_ruleView.current; } 
	 EOF 
;

// Rule View
ruleView returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getViewAccess().getSectionedViewParserRuleCall_0()); 
    }
    this_SectionedView_0=ruleSectionedView
    { 
        $current = $this_SectionedView_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getViewAccess().getCustomViewParserRuleCall_1()); 
    }
    this_CustomView_1=ruleCustomView
    { 
        $current = $this_CustomView_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleSectionedView
entryRuleSectionedView returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSectionedViewRule()); }
	 iv_ruleSectionedView=ruleSectionedView 
	 { $current=$iv_ruleSectionedView.current; } 
	 EOF 
;

// Rule SectionedView
ruleSectionedView returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getSectionedViewAccess().getTableViewParserRuleCall_0()); 
    }
    this_TableView_0=ruleTableView
    { 
        $current = $this_TableView_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getSectionedViewAccess().getDetailsViewParserRuleCall_1()); 
    }
    this_DetailsView_1=ruleDetailsView
    { 
        $current = $this_DetailsView_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleTableView
entryRuleTableView returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTableViewRule()); }
	 iv_ruleTableView=ruleTableView 
	 { $current=$iv_ruleTableView.current; } 
	 EOF 
;

// Rule TableView
ruleTableView returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='tableview' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getTableViewAccess().getTableviewKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getTableViewAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTableViewRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)(	otherlv_2='(' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getTableViewAccess().getLeftParenthesisKeyword_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTableViewAccess().getContentParameterParserRuleCall_2_1_0()); 
	    }
		lv_content_3_0=ruleParameter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTableViewRule());
	        }
       		set(
       			$current, 
       			"content",
        		lv_content_3_0, 
        		"Parameter");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4=')' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getTableViewAccess().getRightParenthesisKeyword_2_2());
    }
)?	otherlv_5='{' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getTableViewAccess().getLeftCurlyBracketKeyword_3());
    }
	otherlv_6='title=' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getTableViewAccess().getTitleKeyword_4());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTableViewAccess().getTitleScalarExpressionParserRuleCall_5_0()); 
	    }
		lv_title_7_0=ruleScalarExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTableViewRule());
	        }
       		set(
       			$current, 
       			"title",
        		lv_title_7_0, 
        		"ScalarExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getTableViewAccess().getSectionsViewSectionParserRuleCall_6_0()); 
	    }
		lv_sections_8_0=ruleViewSection		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTableViewRule());
	        }
       		add(
       			$current, 
       			"sections",
        		lv_sections_8_0, 
        		"ViewSection");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_9='}' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getTableViewAccess().getRightCurlyBracketKeyword_7());
    }
)
;





// Entry rule entryRuleDetailsView
entryRuleDetailsView returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDetailsViewRule()); }
	 iv_ruleDetailsView=ruleDetailsView 
	 { $current=$iv_ruleDetailsView.current; } 
	 EOF 
;

// Rule DetailsView
ruleDetailsView returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='detailsview' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getDetailsViewAccess().getDetailsviewKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getDetailsViewAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDetailsViewRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)(	otherlv_2='(' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getDetailsViewAccess().getLeftParenthesisKeyword_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDetailsViewAccess().getContentParameterParserRuleCall_2_1_0()); 
	    }
		lv_content_3_0=ruleParameter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDetailsViewRule());
	        }
       		set(
       			$current, 
       			"content",
        		lv_content_3_0, 
        		"Parameter");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4=')' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getDetailsViewAccess().getRightParenthesisKeyword_2_2());
    }
)?	otherlv_5='{' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getDetailsViewAccess().getLeftCurlyBracketKeyword_3());
    }
	otherlv_6='title=' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getDetailsViewAccess().getTitleKeyword_4());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDetailsViewAccess().getTitleScalarExpressionParserRuleCall_5_0()); 
	    }
		lv_title_7_0=ruleScalarExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDetailsViewRule());
	        }
       		set(
       			$current, 
       			"title",
        		lv_title_7_0, 
        		"ScalarExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getDetailsViewAccess().getHeaderViewHeaderParserRuleCall_6_0()); 
	    }
		lv_header_8_0=ruleViewHeader		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDetailsViewRule());
	        }
       		set(
       			$current, 
       			"header",
        		lv_header_8_0, 
        		"ViewHeader");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getDetailsViewAccess().getSectionsViewSectionParserRuleCall_7_0()); 
	    }
		lv_sections_9_0=ruleViewSection		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDetailsViewRule());
	        }
       		add(
       			$current, 
       			"sections",
        		lv_sections_9_0, 
        		"ViewSection");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_10='}' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getDetailsViewAccess().getRightCurlyBracketKeyword_8());
    }
)
;





// Entry rule entryRuleCustomView
entryRuleCustomView returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCustomViewRule()); }
	 iv_ruleCustomView=ruleCustomView 
	 { $current=$iv_ruleCustomView.current; } 
	 EOF 
;

// Rule CustomView
ruleCustomView returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='customview' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getCustomViewAccess().getCustomviewKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getCustomViewAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCustomViewRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)(	otherlv_2='(' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getCustomViewAccess().getLeftParenthesisKeyword_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCustomViewAccess().getContentParameterParserRuleCall_2_1_0()); 
	    }
		lv_content_3_0=ruleParameter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCustomViewRule());
	        }
       		set(
       			$current, 
       			"content",
        		lv_content_3_0, 
        		"Parameter");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4=')' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getCustomViewAccess().getRightParenthesisKeyword_2_2());
    }
)?	otherlv_5='implementedBy' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getCustomViewAccess().getImplementedByKeyword_3());
    }
(
(
		lv_objclass_6_0=RULE_STRING
		{
			newLeafNode(lv_objclass_6_0, grammarAccess.getCustomViewAccess().getObjclassSTRINGTerminalRuleCall_4_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCustomViewRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"objclass",
        		lv_objclass_6_0, 
        		"STRING");
	    }

)
))
;





// Entry rule entryRuleViewHeader
entryRuleViewHeader returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getViewHeaderRule()); }
	 iv_ruleViewHeader=ruleViewHeader 
	 { $current=$iv_ruleViewHeader.current; } 
	 EOF 
;

// Rule ViewHeader
ruleViewHeader returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getViewHeaderAccess().getViewHeaderAction_0(),
            $current);
    }
)	otherlv_1='header' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getViewHeaderAccess().getHeaderKeyword_1());
    }
	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getViewHeaderAccess().getLeftCurlyBracketKeyword_2());
    }
(	otherlv_3='title=' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getViewHeaderAccess().getTitleKeyword_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getViewHeaderAccess().getTitleScalarExpressionParserRuleCall_3_1_0()); 
	    }
		lv_title_4_0=ruleScalarExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getViewHeaderRule());
	        }
       		set(
       			$current, 
       			"title",
        		lv_title_4_0, 
        		"ScalarExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_5='subtitle=' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getViewHeaderAccess().getSubtitleKeyword_4_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getViewHeaderAccess().getSubtitleScalarExpressionParserRuleCall_4_1_0()); 
	    }
		lv_subtitle_6_0=ruleScalarExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getViewHeaderRule());
	        }
       		set(
       			$current, 
       			"subtitle",
        		lv_subtitle_6_0, 
        		"ScalarExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_7='details=' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getViewHeaderAccess().getDetailsKeyword_5_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getViewHeaderAccess().getDetailsScalarExpressionParserRuleCall_5_1_0()); 
	    }
		lv_details_8_0=ruleScalarExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getViewHeaderRule());
	        }
       		set(
       			$current, 
       			"details",
        		lv_details_8_0, 
        		"ScalarExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_9='image=' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getViewHeaderAccess().getImageKeyword_6_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getViewHeaderAccess().getImageScalarExpressionParserRuleCall_6_1_0()); 
	    }
		lv_image_10_0=ruleScalarExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getViewHeaderRule());
	        }
       		set(
       			$current, 
       			"image",
        		lv_image_10_0, 
        		"ScalarExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))?	otherlv_11='}' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getViewHeaderAccess().getRightCurlyBracketKeyword_7());
    }
)
;





// Entry rule entryRuleViewSection
entryRuleViewSection returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getViewSectionRule()); }
	 iv_ruleViewSection=ruleViewSection 
	 { $current=$iv_ruleViewSection.current; } 
	 EOF 
;

// Rule ViewSection
ruleViewSection returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='section' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getViewSectionAccess().getSectionKeyword_0());
    }
	otherlv_1='{' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getViewSectionAccess().getLeftCurlyBracketKeyword_1());
    }
(	otherlv_2='title=' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getViewSectionAccess().getTitleKeyword_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getViewSectionAccess().getTitleScalarExpressionParserRuleCall_2_1_0()); 
	    }
		lv_title_3_0=ruleScalarExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getViewSectionRule());
	        }
       		set(
       			$current, 
       			"title",
        		lv_title_3_0, 
        		"ScalarExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))?(
(
		{ 
	        newCompositeNode(grammarAccess.getViewSectionAccess().getCellsSectionCellParserRuleCall_3_0()); 
	    }
		lv_cells_4_0=ruleSectionCell		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getViewSectionRule());
	        }
       		add(
       			$current, 
       			"cells",
        		lv_cells_4_0, 
        		"SectionCell");
	        afterParserOrEnumRuleCall();
	    }

)
)+	otherlv_5='}' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getViewSectionAccess().getRightCurlyBracketKeyword_4());
    }
)
;





// Entry rule entryRuleSectionCell
entryRuleSectionCell returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSectionCellRule()); }
	 iv_ruleSectionCell=ruleSectionCell 
	 { $current=$iv_ruleSectionCell.current; } 
	 EOF 
;

// Rule SectionCell
ruleSectionCell returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='cell' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getSectionCellAccess().getCellKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSectionCellAccess().getTypeCellTypeEnumRuleCall_1_0()); 
	    }
		lv_type_1_0=ruleCellType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSectionCellRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_1_0, 
        		"CellType");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_2='foreach' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getSectionCellAccess().getForeachKeyword_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSectionCellAccess().getIteratorCollectionIteratorParserRuleCall_2_1_0()); 
	    }
		lv_iterator_3_0=ruleCollectionIterator		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSectionCellRule());
	        }
       		set(
       			$current, 
       			"iterator",
        		lv_iterator_3_0, 
        		"CollectionIterator");
	        afterParserOrEnumRuleCall();
	    }

)
))?	otherlv_4='{' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getSectionCellAccess().getLeftCurlyBracketKeyword_3());
    }
(	otherlv_5='text=' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getSectionCellAccess().getTextKeyword_4_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSectionCellAccess().getTextScalarExpressionParserRuleCall_4_1_0()); 
	    }
		lv_text_6_0=ruleScalarExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSectionCellRule());
	        }
       		set(
       			$current, 
       			"text",
        		lv_text_6_0, 
        		"ScalarExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_7='details=' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getSectionCellAccess().getDetailsKeyword_5_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSectionCellAccess().getDetailsScalarExpressionParserRuleCall_5_1_0()); 
	    }
		lv_details_8_0=ruleScalarExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSectionCellRule());
	        }
       		set(
       			$current, 
       			"details",
        		lv_details_8_0, 
        		"ScalarExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_9='image=' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getSectionCellAccess().getImageKeyword_6_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSectionCellAccess().getImageScalarExpressionParserRuleCall_6_1_0()); 
	    }
		lv_image_10_0=ruleScalarExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSectionCellRule());
	        }
       		set(
       			$current, 
       			"image",
        		lv_image_10_0, 
        		"ScalarExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_11='query=' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getSectionCellAccess().getQueryKeyword_7_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSectionCellAccess().getQueryScalarExpressionParserRuleCall_7_1_0()); 
	    }
		lv_query_12_0=ruleScalarExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSectionCellRule());
	        }
       		set(
       			$current, 
       			"query",
        		lv_query_12_0, 
        		"ScalarExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_13='action=' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getSectionCellAccess().getActionKeyword_8_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSectionCellAccess().getActionViewActionParserRuleCall_8_1_0()); 
	    }
		lv_action_14_0=ruleViewAction		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSectionCellRule());
	        }
       		set(
       			$current, 
       			"action",
        		lv_action_14_0, 
        		"ViewAction");
	        afterParserOrEnumRuleCall();
	    }

)
))?	otherlv_15='}' 
    {
    	newLeafNode(otherlv_15, grammarAccess.getSectionCellAccess().getRightCurlyBracketKeyword_9());
    }
)
;





// Entry rule entryRuleCollectionIterator
entryRuleCollectionIterator returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCollectionIteratorRule()); }
	 iv_ruleCollectionIterator=ruleCollectionIterator 
	 { $current=$iv_ruleCollectionIterator.current; } 
	 EOF 
;

// Rule CollectionIterator
ruleCollectionIterator returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getCollectionIteratorAccess().getCollectionCollectionExpressionParserRuleCall_0_0()); 
	    }
		lv_collection_0_0=ruleCollectionExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCollectionIteratorRule());
	        }
       		set(
       			$current, 
       			"collection",
        		lv_collection_0_0, 
        		"CollectionExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_1='as' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getCollectionIteratorAccess().getAsKeyword_1());
    }
(
(
		lv_name_2_0=RULE_ID
		{
			newLeafNode(lv_name_2_0, grammarAccess.getCollectionIteratorAccess().getNameIDTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCollectionIteratorRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"ID");
	    }

)
))
;





// Entry rule entryRuleViewAction
entryRuleViewAction returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getViewActionRule()); }
	 iv_ruleViewAction=ruleViewAction 
	 { $current=$iv_ruleViewAction.current; } 
	 EOF 
;

// Rule ViewAction
ruleViewAction returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getViewActionAccess().getViewCallParserRuleCall_0()); 
    }
    this_ViewCall_0=ruleViewCall
    { 
        $current = $this_ViewCall_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getViewActionAccess().getExternalOpenParserRuleCall_1()); 
    }
    this_ExternalOpen_1=ruleExternalOpen
    { 
        $current = $this_ExternalOpen_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleExternalOpen
entryRuleExternalOpen returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getExternalOpenRule()); }
	 iv_ruleExternalOpen=ruleExternalOpen 
	 { $current=$iv_ruleExternalOpen.current; } 
	 EOF 
;

// Rule ExternalOpen
ruleExternalOpen returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		{ 
	        newCompositeNode(grammarAccess.getExternalOpenAccess().getUrlScalarExpressionParserRuleCall_0()); 
	    }
		lv_url_0_0=ruleScalarExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExternalOpenRule());
	        }
       		set(
       			$current, 
       			"url",
        		lv_url_0_0, 
        		"ScalarExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)
;





// Entry rule entryRuleViewCall
entryRuleViewCall returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getViewCallRule()); }
	 iv_ruleViewCall=ruleViewCall 
	 { $current=$iv_ruleViewCall.current; } 
	 EOF 
;

// Rule ViewCall
ruleViewCall returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getViewCallRule());
	        }
        }
	otherlv_0=RULE_ID
	{
		newLeafNode(otherlv_0, grammarAccess.getViewCallAccess().getViewViewCrossReference_0_0()); 
	}

)
)	otherlv_1='(' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getViewCallAccess().getLeftParenthesisKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getViewCallAccess().getProviderProviderConstructionParserRuleCall_2_0()); 
	    }
		lv_provider_2_0=ruleProviderConstruction		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getViewCallRule());
	        }
       		set(
       			$current, 
       			"provider",
        		lv_provider_2_0, 
        		"ProviderConstruction");
	        afterParserOrEnumRuleCall();
	    }

)
)?	otherlv_3=')' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getViewCallAccess().getRightParenthesisKeyword_3());
    }
)
;





// Rule CellType
ruleCellType returns [Enumerator current=null] 
    @init { enterRule(); }
    @after { leaveRule(); }:
((	enumLiteral_0='Default' 
	{
        $current = grammarAccess.getCellTypeAccess().getDefaultEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_0, grammarAccess.getCellTypeAccess().getDefaultEnumLiteralDeclaration_0()); 
    }
)
    |(	enumLiteral_1='DefaultWithDisclosure' 
	{
        $current = grammarAccess.getCellTypeAccess().getDefaultWithDisclosureEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_1, grammarAccess.getCellTypeAccess().getDefaultWithDisclosureEnumLiteralDeclaration_1()); 
    }
)
    |(	enumLiteral_2='Value2' 
	{
        $current = grammarAccess.getCellTypeAccess().getValue2EnumLiteralDeclaration_2().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_2, grammarAccess.getCellTypeAccess().getValue2EnumLiteralDeclaration_2()); 
    }
)
    |(	enumLiteral_3='Double' 
	{
        $current = grammarAccess.getCellTypeAccess().getDoubleEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_3, grammarAccess.getCellTypeAccess().getDoubleEnumLiteralDeclaration_3()); 
    }
)
    |(	enumLiteral_4='Subtitle' 
	{
        $current = grammarAccess.getCellTypeAccess().getSubtitleEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_4, grammarAccess.getCellTypeAccess().getSubtitleEnumLiteralDeclaration_4()); 
    }
)
    |(	enumLiteral_5='Map' 
	{
        $current = grammarAccess.getCellTypeAccess().getMapsEnumLiteralDeclaration_5().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_5, grammarAccess.getCellTypeAccess().getMapsEnumLiteralDeclaration_5()); 
    }
));



RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


