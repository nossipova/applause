/*
 * generated by Xtext
 */
package org.applause.lang.ui.outline;

import org.applause.lang.applauseDsl.Constant;
import org.applause.lang.applauseDsl.ContentProvider;
import org.applause.lang.applauseDsl.SectionCell;
import org.applause.lang.applauseDsl.SectionedView;
import org.applause.lang.applauseDsl.TabbarButton;
import org.applause.lang.applauseDsl.View;
import org.applause.lang.applauseDsl.ViewCall;
import org.applause.lang.applauseDsl.ViewSection;
import org.applause.lang.services.ApplauseDslGrammarAccess;
import org.eclipse.xtext.ui.editor.outline.IOutlineNode;
import org.eclipse.xtext.ui.editor.outline.impl.DefaultOutlineTreeProvider;

import com.google.inject.Inject;

/**
 * customization of the default outline structure
 * 
 */
public class ApplauseDslOutlineTreeProvider extends DefaultOutlineTreeProvider {

	@Inject
	ApplauseDslGrammarAccess grammarAccess;

	protected boolean _isLeaf(View modelElement) {
		return true;
	}

	protected boolean _isLeaf(ContentProvider modelElement) {
		return true;
	}

	protected boolean _isLeaf(SectionCell modelElement) {
		return true;
	}

	protected boolean _isLeaf(Constant modelElement) {
		return true;
	}

	protected void _createNode(IOutlineNode parentNode, TabbarButton modelElement) {
		createEObjectNode(parentNode, modelElement, labelProvider.getImage(modelElement), grammarAccess
				.getTabbarButtonAccess().getButtonKeyword_0().getValue(), false);
	}

	protected void _createNode(IOutlineNode parentNode, ViewCall modelElement) {
		createEObjectNode(parentNode, modelElement, labelProvider.getImage(modelElement), modelElement.getView()
				.getName(), true);
	}

	protected void _createChildren(IOutlineNode parentNode, ViewSection modelElement) {
		for (SectionCell cell : modelElement.getCells()) {
			createNode(parentNode, cell);
		}
	}

	protected void _createChildren(IOutlineNode parentNode, SectionedView modelElement) {
		for (ViewSection section : modelElement.getSections()) {
			createNode(parentNode, section);
		}
	}
}
